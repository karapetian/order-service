{
  "openapi": "3.0.1",
  "info": {
    "title": "Order Service API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8090/imea-systems",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Customer API",
      "description": "Endpoints for managing customer resources"
    },
    {
      "name": "Order API",
      "description": "Endpoints for managing order resources with their order items and history"
    }
  ],
  "paths": {
    "/api/v1/orders/{id}": {
      "get": {
        "tags": [
          "Order API"
        ],
        "summary": "Get order by id",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Provided id must be grater than 0",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Found the Order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order API"
        ],
        "summary": "Update order by id",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully updated the Order"
          }
        }
      },
      "delete": {
        "tags": [
          "Order API"
        ],
        "summary": "Delete order by id",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully deleted the Order"
          }
        }
      }
    },
    "/api/v1/customers/{id}": {
      "get": {
        "tags": [
          "Customer API"
        ],
        "summary": "Get customer by id",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Found the Customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "400": {
            "description": "Provided id must be grater than 0",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer API"
        ],
        "summary": "Update customer by id",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully updated the Customer"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer API"
        ],
        "summary": "Delete customer by id",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully deleted the Customer"
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": [
          "Order API"
        ],
        "summary": "Get all orders, Adjust default params - page(0), size(10), sort(ASC)",
        "operationId": "getAllOrders",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Must be greater than or equal to 0",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Must be greater than or equal to 1",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Must be 'ASC' or 'DESC', case insensitive",
            "required": false,
            "schema": {
              "pattern": "((?i)\\basc\\b)|((?i)\\bdesc\\b)",
              "type": "string",
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input data provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved the list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Order API"
        ],
        "summary": "Create order",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity. Invalid data provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Order successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers": {
      "get": {
        "tags": [
          "Customer API"
        ],
        "summary": "Get all customers, Adjust default params - page(0), size(10), sort(ASC)",
        "operationId": "getAllCustomers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Must be greater than or equal to 0",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Must be greater than or equal to 1",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Must be 'ASC' or 'DESC', case insensitive",
            "required": false,
            "schema": {
              "pattern": "((?i)\\basc\\b)|((?i)\\bdesc\\b)",
              "type": "string",
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input data provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved the list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer API"
        ],
        "summary": "Create customer",
        "operationId": "createCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Customer successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Invalid data provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{id}/history": {
      "get": {
        "tags": [
          "Order API"
        ],
        "summary": "Get the history of the Order",
        "operationId": "getOrderHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the order's history",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Provided id must be grater than 0",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateOrderDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "currentStatus": {
            "type": "string",
            "enum": [
              "PENDING",
              "PROCESSING",
              "PAID",
              "SHIPPED",
              "DELIVERED",
              "CANCELED",
              "REFUNDED"
            ]
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateOrderItemDto"
            }
          },
          "shippingAddress": {
            "type": "string"
          },
          "paymentDetails": {
            "type": "string"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "shippedDate": {
            "type": "string",
            "format": "date-time"
          },
          "deliveredDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateOrderItemDto": {
        "required": [
          "product"
        ],
        "type": "object",
        "properties": {
          "product": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateCustomerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^\\+{0,1}[0-9]{8,20}$",
            "type": "string"
          }
        }
      },
      "CreateOrderDto": {
        "required": [
          "customerId",
          "orderItems",
          "shippingAddress"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderItemDto"
            }
          },
          "shippingAddress": {
            "type": "string"
          },
          "paymentDetails": {
            "type": "string"
          }
        }
      },
      "CreateOrderItemDto": {
        "required": [
          "product"
        ],
        "type": "object",
        "properties": {
          "product": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "OrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerDto"
          },
          "currentStatus": {
            "type": "string",
            "enum": [
              "PENDING",
              "PROCESSING",
              "PAID",
              "SHIPPED",
              "DELIVERED",
              "CANCELED",
              "REFUNDED"
            ]
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "shippingAddress": {
            "type": "string"
          },
          "paymentDetails": {
            "type": "string"
          },
          "orderCreationDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "shippedDate": {
            "type": "string",
            "format": "date-time"
          },
          "deliveredDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "product": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateCustomerDto": {
        "required": [
          "email",
          "name",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^\\+{0,1}[0-9]{8,20}$",
            "type": "string"
          }
        },
        "description": "Data to create a Customer"
      },
      "OrderResponse": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDto"
            }
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrderHistoryDto": {
        "required": [
          "id",
          "modifiedDate",
          "orderId",
          "orderStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderStatus": {
            "type": "string",
            "enum": [
              "PENDING",
              "PROCESSING",
              "PAID",
              "SHIPPED",
              "DELIVERED",
              "CANCELED",
              "REFUNDED"
            ]
          }
        }
      },
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerDto"
            }
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}